# FlowAgent Task System CI/CD Pipeline

name: Flow Tasks CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Test and validate tasks
  test:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Process and validate tasks
      - name: Process Tasks
        run: |
          python process_tasks.py

      # Test Flask API
      - name: Test Flask API
        run: |
          # Start Flask app in background
          export FLASK_ENV=testing
          python flow_code/hello_api.py &
          FLASK_PID=$!
          
          # Wait for Flask to start by polling the /health endpoint
          for i in {1..10}; do
            if curl -fs http://localhost:5000/health; then
              break
            fi
            echo "Waiting for Flask to be ready... ($i/10)"
            sleep 1
          done
          
          # Test the API endpoints
          curl -f http://localhost:5000/ || exit 1
          curl -f http://localhost:5000/health || exit 1
          
          # Stop Flask app
          kill $FLASK_PID
          
          echo "âœ“ Flask API tests passed"
